# Generated by Django 3.2.3 on 2024-10-26 17:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('slug', models.SlugField(max_length=32, unique=True, verbose_name='Идентификатор')),
                ('image', models.ImageField(upload_to='shopfood/images/', verbose_name='Картинка')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('slug', models.SlugField(max_length=32, unique=True, verbose_name='Идентификатор')),
                ('image', models.ImageField(upload_to='shopfood/images/', verbose_name='Картинка')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость продукта')),
                ('image_medium_size', models.ImageField(upload_to='shopfood/images/', verbose_name='Средняя картинка продкукта')),
                ('image_big_size', models.ImageField(upload_to='shopfood/images/', verbose_name='Большая картинка продкукта')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('slug', models.SlugField(max_length=32, unique=True, verbose_name='Идентификатор')),
                ('image', models.ImageField(upload_to='shopfood/images/', verbose_name='Картинка')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Подкатегория',
                'verbose_name_plural': 'Подкатегории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество продукта')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shoppingcart_set', to='products.product', verbose_name='Продукт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shoppingcart_set', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Список Покупок',
                'verbose_name_plural': 'Списки Покупок',
                'abstract': False,
                'default_related_name': 'shoppingcart_set',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.subcategory', verbose_name='Подкатегория'),
        ),
        migrations.AddConstraint(
            model_name='shoppingcart',
            constraint=models.UniqueConstraint(fields=('user', 'product'), name='unique_shoppingcart'),
        ),
    ]
